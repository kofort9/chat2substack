name: Chat2Substack Pipeline

on:
  workflow_dispatch:
    inputs:
      input_path:
        description: 'Path to input file (HTML or TXT)'
        required: true
        default: 'inbox/chat.html'
        type: string
      create_draft:
        description: 'Create Substack draft (requires credentials)'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Node.js dependencies
        run: |
          npm ci
      
      - name: Run tests
        run: |
          pytest -v --tb=short
      
      - name: Run linting
        run: |
          python -m flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503
        continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci
      
      - name: Create sample input
        run: |
          mkdir -p inbox
          cat > inbox/chat.html << 'EOF'
          <html>
          <head><title>Sample AI Discussion</title></head>
          <body>
            <h1>Understanding Machine Learning</h1>
            <div class="conversation-turn">
              <div data-message-author-role="user">What is machine learning and how does it work?</div>
            </div>
            <div class="conversation-turn">
              <div data-message-author-role="assistant">Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience without being explicitly programmed. It works by using algorithms to identify patterns in data and make predictions or decisions based on those patterns.</div>
            </div>
            <div class="conversation-turn">
              <div data-message-author-role="user">What are the main types of machine learning?</div>
            </div>
            <div class="conversation-turn">
              <div data-message-author-role="assistant">There are three main types: supervised learning (learning with labeled examples), unsupervised learning (finding patterns in unlabeled data), and reinforcement learning (learning through trial and error with rewards and penalties).</div>
            </div>
            <div class="conversation-turn">
              <div data-message-author-role="user">What are some practical applications of machine learning?</div>
            </div>
            <div class="conversation-turn">
              <div data-message-author-role="assistant">Machine learning is used in many applications including recommendation systems (Netflix, Amazon), image recognition (medical diagnosis, autonomous vehicles), natural language processing (chatbots, translation), fraud detection, and predictive analytics in business and finance.</div>
            </div>
          </body>
          </html>
          EOF
      
      - name: Run pipeline
        run: |
          python -m src.run --input ${{ github.event.inputs.input_path }} --create-draft=false
      
      - name: Verify output files
        run: |
          ls -la dist/
          echo "=== Markdown file ==="
          head -20 dist/post_*.md
          echo "=== HTML file ==="
          head -20 dist/post_*.html
          echo "=== Metadata ==="
          cat dist/draft_meta.json
          echo "=== Run report ==="
          head -30 dist/run_report.md
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chat2substack-output
          path: dist/
          retention-days: 30

  draft-creation:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.create_draft == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci
          npx playwright install
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: chat2substack-output
          path: dist/
      
      - name: Create Substack draft
        env:
          SUBSTACK_EMAIL: ${{ secrets.SUBSTACK_EMAIL }}
          SUBSTACK_PASSWORD: ${{ secrets.SUBSTACK_PASSWORD }}
          SUBSTACK_HOST: ${{ secrets.SUBSTACK_HOST }}
        run: |
          if [ -z "$SUBSTACK_EMAIL" ] || [ -z "$SUBSTACK_PASSWORD" ] || [ -z "$SUBSTACK_HOST" ]; then
            echo "Substack credentials not configured. Skipping draft creation."
            echo "Draft creation requires SUBSTACK_EMAIL, SUBSTACK_PASSWORD, and SUBSTACK_HOST secrets."
            exit 0
          fi
          
          # Run Playwright script to create draft
          npx ts-node src/publish/playwright_draft.ts "Test Draft" "$(cat dist/post_*.html)" "test,ai,ml"
        continue-on-error: true
      
      - name: Update run report with draft URL
        if: success()
        run: |
          echo "Draft creation completed successfully"
          echo "Draft URL: https://YOURNAME.substack.com/p/draft-url" >> dist/run_report.md
      
      - name: Upload updated artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chat2substack-output-with-draft
          path: dist/
          retention-days: 30

  security-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install security tools
        run: |
          pip install bandit safety
      
      - name: Run security scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true
        continue-on-error: true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
          retention-days: 30
